<?php

// 5. Дан код:

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();

// Что он выведет на каждом шаге? Почему?
// Немного изменим п.5:

class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); 
$b1->foo(); 
$a1->foo(); 
$b1->foo();

// 6. Объясните результаты в этом случае.

// В первом случае вывод будет "1234" так как при первом вызове метода foo() переменная $x иницилизируется нулем, затем инкримируется унарным оператором ++ и выводится 1
// Так как переменная статическая, она сохраняет предыдущие значения и поэтому при втором вызове уже инкримируется 1 и выводится 2
// при 3 вызове foo() инкримируется $x c сохраненым предыдущим значением 2 и в итоге выводится 3
// при 4 - аналогично выводится значение 4

// Во втором случае (примере) выведется "1122".
// Так как статическая переменная привязана к классу, вызов метода foo() для разных классов изменяет только переменную данного класса
// для класса А метод foo() вызывается два раза (будет выведено 12) и для класса B метод foo() вызывается два раза (аналогично будет выведено 12)